#!/bin/bash

HOSTNAME=$(cat /etc/hostname)

###### add dirs

#KEYS
##1 - raw address
MY_RAW_ADDRESS=$(cat ~/ton-keys/$HOSTNAME.addr)
MY_PARSED_RAW_ADDRESS=$(echo $MY_RAW_ADDRESS | sed 's/^.\{3\}//')
MY_X_RAW_ADDRESS=$(printf "x%s" $MY_PARSED_RAW_ADDRESS)

##2 - election adnl key
DIR_ELECTION_ADNL_KEY=$(cat ~/ton-keys/elections/$HOSTNAME-election-adnl-key | grep  "created new key" | awk '{print $4}')
##### add here saved adnl keys by lite-client dumptrans

##3 node pubkey
NODE_PUBKEY=$(cat ~/ton-keys/elections/$HOSTNAME-request-dump2 | grep 'public key' | awk '{print $11}' | tr '[:upper:]' '[:lower:]')
NODE_X_PUBKEY=$(printf "0x%s" "$NODE_PUBKEY")

##4 msig public key
MSIG_PUBLIC_KEY=$(cat ~/ton-keys/msig.keys.json | grep 'public' | awk '{print $2}' | tr -d '"' | tr -d ',')
MSIG_X_PUBLICKEY=$(printf "0x%s" "$MSIG_PUBLIC_KEY")
MSIG_KEYS_JSON=$(cat ~/ton-keys/msig.keys.json)

##5 safemultisigwallet files
SAFEMULTISIGWALLET_ABI_JSON="~/net.ton.dev/ton-labs-contracts/solidity/safemultisig/SafeMultisigWallet.abi.json"
SAFEMULTISIGWALLET_TVC="~/net.ton.dev/ton-labs-contracts/solidity/safemultisig/SafeMultisigWallet.tvc"

###### add boc

#ACCOUNT
#1 - general info
MY_ACCOUNT=$(cd ~/net.ton.dev/ton/build/lite-client && ./lite-client -p ~/ton-keys/liteserver.pub -a 127.0.0.1:3031 -rc "getaccount ${MY_RAW_ADDRESS}" -rc 'quit' 2>/dev/null)
MY_ACCOUNT_STATUS=$(echo "$MY_ACCOUNT" | grep account | awk 'FNR == 3 {print $1}' | perl -ne '/state:\(account_(\S+)/ && print $1')
LAST_TRANS_LT=$(echo "$MY_ACCOUNT" | grep account | awk 'FNR == 2 {print $2}' | tr -d 'last_trans_lt:')
LAST_TX_UNIXTIME=$(echo "$MY_ACCOUNT" | grep last_paid | awk '{print $4}' | tr -d 'last_paid:')
LAST_TX_HUMANTIME=$(date -d @"$LAST_TX_UNIXTIME")

#2 - balance
MY_NANO_BALANCE=$(echo "$MY_ACCOUNT" | tail -n 1 | tr -d '=''ng' | awk '{print $4}')
MY_CONVERTED_TOKENS=$(echo "$MY_NANO_BALANCE"/1000000000 | bc -l)
MY_BALANCE=$(printf "%.9f" $MY_CONVERTED_TOKENS)

#TIME
##0 - get current time in unix and human time
CURRENT_UNIXTIME=$(date +%s)
CURRENT_HUMANTIME=$(date)

##1 - get time variables from p15
###1A - election time variables
ELECTION_START_BEFORE=$(cd ~/net.ton.dev/ton/build/lite-client && ./lite-client -p ~/ton-keys/liteserver.pub -a 127.0.0.1:3031 -rc 'getconfig 15' -rc 'quit' 2>/dev/null | awk 'FNR == 4 {print $5}' | tr -d 'elections_start_before:')
ELECTION_END_BEFORE=$(cd ~/net.ton.dev/ton/build/lite-client && ./lite-client -p ~/ton-keys/liteserver.pub -a 127.0.0.1:3031 -rc 'getconfig 15' -rc 'quit' 2>/dev/null | awk 'FNR == 4 {print $6}' | tr -d 'elections_end_before:')

##1B - duration of validation cycle
CYCLE_DURATION=$(cd ~/net.ton.dev/ton/build/lite-client && ./lite-client -p ~/ton-keys/liteserver.pub -a 127.0.0.1:3031 -rc 'getconfig 15' -rc 'quit' 2>/dev/null | awk 'FNR == 4 {print $4}' | tr -d 'validators_elected_for:')

##2 - get time variables from p34
###2A - get current validation
CURRENT_VALIDATION_SINCE_UNIXTIME=$(cd ~/net.ton.dev/ton/build/lite-client && ./lite-client -p ~/ton-keys/liteserver.pub -a 127.0.0.1:3031 -rc 'getconfig 34' -rc 'quit' 2>/dev/null | grep time | awk '{print $2}' | tr -d 'utime_since:')
CURRENT_VALIDATION_UNTIL_UNIXTIME=$(cd ~/net.ton.dev/ton/build/lite-client && ./lite-client -p ~/ton-keys/liteserver.pub -a 127.0.0.1:3031 -rc 'getconfig 34' -rc 'quit' 2>/dev/null | grep time | awk '{print $3}' | tr -d 'utime_until:')

CURRENT_VALIDATION_SINCE_HUMANTIME=$(date -d @"$CURRENT_VALIDATION_SINCE_UNIXTIME")
CURRENT_VALIDATION_UNTIL_HUMANTIME=$(date -d @"$CURRENT_VALIDATION_UNTIL_UNIXTIME")

###2B - calculate previous validation cycle
PREVIOUS_VALIDATION_SINCE_UNIXTIME=$(expr $CURRENT_VALIDATION_SINCE_UNIXTIME - $CYCLE_DURATION)
PREVIOUS_VALIDATION_UNTIL_UNIXTIME=$(expr $CURRENT_VALIDATION_UNTIL_UNIXTIME - $CYCLE_DURATION)

PREVIOUS_VALIDATION_SINCE_HUMANTIME=$(date -d @"$PREVIOUS_VALIDATION_SINCE_UNIXTIME")
PREVIOUS_VALIDATION_UNTIL_HUMANTIME=$(date -d @"$PREVIOUS_VALIDATION_UNTIL_UNIXTIME")

###2C - calculate next validation cycle
NEXT_VALIDATION_SINCE_UNIXTIME=$(expr $CURRENT_VALIDATION_SINCE_UNIXTIME + $CYCLE_DURATION)
NEXT_VALIDATION_UNTIL_UNIXTIME=$(expr $CURRENT_VALIDATION_UNTIL_UNIXTIME + $CYCLE_DURATION)

NEXT_VALIDATION_SINCE_HUMANTIME=$(date -d @"$NEXT_VALIDATION_SINCE_UNIXTIME")
NEXT_VALIDATION_UNTIL_HUMANTIME=$(date -d @"$NEXT_VALIDATION_UNTIL_UNIXTIME")

##4 - calculate election cycles
###4A - calculate previous election start/end in unixtime and active-election-id
PREVIOUS_ACTIVE_ELECTION_ID=$(expr $CURRENT_VALIDATION_UNTIL_UNIXTIME - $CYCLE_DURATION)
PREVIOUS_ELECTION_SINCE_UNIXTIME=$(expr $CURRENT_VALIDATION_UNTIL_UNIXTIME - $ELECTION_START_BEFORE - $CYCLE_DURATION)
PREVIOUS_ELECTION_UNTIL_UNIXTIME=$(expr $CURRENT_VALIDATION_UNTIL_UNIXTIME - $ELECTION_END_BEFORE - $CYCLE_DURATION)

PREVIOUS_ELECTION_SINCE_HUMANTIME=$(date -d @"$PREVIOUS_ELECTION_SINCE_UNIXTIME")
PREVIOUS_ELECTION_UNTIL_HUMANTIME=$(date -d @"$PREVIOUS_ELECTION_UNTIL_UNIXTIME")

###4B - calculate upcoming election start/end and active-election-id
UPCOMING_ACTIVE_ELECTION_ID=$CURRENT_VALIDATION_UNTIL_UNIXTIME
UPCOMING_ELECTION_SINCE_UNIXTIME=$(expr $CURRENT_VALIDATION_UNTIL_UNIXTIME - $ELECTION_START_BEFORE)
UPCOMING_ELECTION_UNTIL_UNIXTIME=$(expr $CURRENT_VALIDATION_UNTIL_UNIXTIME - $ELECTION_END_BEFORE)

UPCOMING_ELECTION_SINCE_HUMANTIME=$(date -d @"$UPCOMING_ELECTION_SINCE_UNIXTIME")
UPCOMING_ELECTION_UNTIL_HUMANTIME=$(date -d @"$UPCOMING_ELECTION_UNTIL_UNIXTIME")

###4C - calculate next election start/end in and active-election-id
NEXT_ACTIVE_ELECTION_ID=$(expr $CURRENT_VALIDATION_UNTIL_UNIXTIME + $CYCLE_DURATION)
NEXT_ELECTION_SINCE_UNIXTIME=$(expr $CURRENT_VALIDATION_UNTIL_UNIXTIME - $ELECTION_START_BEFORE + $CYCLE_DURATION)
NEXT_ELECTION_UNTIL_UNIXTIME=$(expr $CURRENT_VALIDATION_UNTIL_UNIXTIME - $ELECTION_END_BEFORE + $CYCLE_DURATION)

NEXT_ELECTION_SINCE_HUMANTIME=$(date -d @"$NEXT_ELECTION_SINCE_UNIXTIME")
NEXT_ELECTION_UNTIL_HUMANTIME=$(date -d @"$NEXT_ELECTION_UNTIL_UNIXTIME")

#COLORS
NO_COLOR='\e[0m'
RED='\e[31m'
GREEN='\e[32m'
YELLOW='\e[33m'
BLUE='\e[34m'
LIGHT_RED='\e[91'
